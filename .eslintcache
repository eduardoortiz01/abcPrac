[{"D:\\aprreact\\src\\index.js":"1","D:\\aprreact\\src\\App.js":"2","D:\\aprreact\\src\\reportWebVitals.js":"3"},{"size":1220,"mtime":1608565348499,"results":"4","hashOfConfig":"5"},{"size":1276,"mtime":1608048486836,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10","usedDeprecatedRules":"11"},"vfnbom",{"filePath":"12","messages":"13","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14","usedDeprecatedRules":"11"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"D:\\aprreact\\src\\index.js",["18","19","20","21","22"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Saludos from './App'\nimport Example from './App'\n\nimport useWindowDimensions from './App'\n\nimport {isMobile} from 'react-device-detect'\nimport {isChrome} from 'react-device-detect'\n\n\n\n\n\nconst RenderContent = () => {\n  if(isMobile) {\n    return (<div>Hola mobil</div>);\n  }\n  if(isChrome) {\n    return (<div>hola chrome</div>\n    \n      );\n  }\n\n  return (<div>........... contenido </div>);\n\n}\n\n\nconst internalIp = require('internal-ip');\n\n\n(async () => {\n  \n  console.log(await internalIp.v4());\n  //=> '10.0.0.79'\n})();\n\n\n\n \n\nconst element3 = <Saludos namae = \"aaaa\"/>\n\nconst element2 = <App/>\n\n\n\nconst Componenteresol = () => {\n  const { height, width } = useWindowDimensions();\n\n  return (\n    <div>\n      width: {width} ~ height: {height} \n    </div>\n  );\n}\n\n\nReactDOM.render(\n\n  <RenderContent/>,\n  document.getElementById('root')\n\n);\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n",["23","24"],"D:\\aprreact\\src\\App.js",["25","26","27","28"],"import logo from './logo.svg';\nimport './App.css';\n\n\nimport { useState, useEffect } from 'react';\n\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <header className=\"App-header\">\n        \n    \n\n\n        <p>\n          hola desde componente\n          \n\n        </p>\n        \n      </header>\n    </div>\n  );\n}\n\n\n\n\n\nfunction Example() {\n  // Declara una nueva variable de estado, que llamaremos \"count\".\n  const [count, setCount] = useState(0);\n\n  return (\n    <div>\n      <p>You clicked {count} times</p>\n      <button onClick={() => setCount(count + 1)}>\n        Click me\n      </button>\n      <p>ahora es {count}</p>\n    </div>\n  );\n}\n\n\nfunction Saludos(props) {\n  return <h1>hola desde componente, {props.namae}</h1>;\n}\n\n\n\n","D:\\aprreact\\src\\reportWebVitals.js",[],["29","30"],{"ruleId":"31","severity":1,"message":"32","line":5,"column":8,"nodeType":"33","messageId":"34","endLine":5,"endColumn":23},{"ruleId":"31","severity":1,"message":"35","line":7,"column":8,"nodeType":"33","messageId":"34","endLine":7,"endColumn":15},{"ruleId":"31","severity":1,"message":"36","line":46,"column":7,"nodeType":"33","messageId":"34","endLine":46,"endColumn":15},{"ruleId":"31","severity":1,"message":"37","line":48,"column":7,"nodeType":"33","messageId":"34","endLine":48,"endColumn":15},{"ruleId":"31","severity":1,"message":"38","line":52,"column":7,"nodeType":"33","messageId":"34","endLine":52,"endColumn":22},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"31","severity":1,"message":"43","line":1,"column":8,"nodeType":"33","messageId":"34","endLine":1,"endColumn":12},{"ruleId":"31","severity":1,"message":"44","line":33,"column":10,"nodeType":"33","messageId":"34","endLine":33,"endColumn":13},{"ruleId":"31","severity":1,"message":"35","line":57,"column":10,"nodeType":"33","messageId":"34","endLine":57,"endColumn":17},{"ruleId":"31","severity":1,"message":"45","line":73,"column":10,"nodeType":"33","messageId":"34","endLine":73,"endColumn":17},{"ruleId":"39","replacedBy":"46"},{"ruleId":"41","replacedBy":"47"},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","'Example' is defined but never used.","'element3' is assigned a value but never used.","'element2' is assigned a value but never used.","'Componenteresol' is assigned a value but never used.","no-native-reassign",["48"],"no-negated-in-lhs",["49"],"'logo' is defined but never used.","'App' is defined but never used.","'Saludos' is defined but never used.",["48"],["49"],"no-global-assign","no-unsafe-negation"]